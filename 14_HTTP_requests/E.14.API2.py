# -----------------------------------------------
# P.API.3
# -----------------------------------------------
# • Naudojant tą pačią Frankfurter API, kaip ir 1 užduotyje, sukurti programą,
#   kuri pagal argumentuose pateiktas valiutų poras bei periodo pradžios ir
#   pabaigos datą surastų dienas, kada kursas buvo aukščiausias ir kada jis
#   buvo žemiausias. Funkcijos kvietimas ir rezultatas turėtų atrodyti maždaug
#   taip:
#     =========================================================================
#     currency_pair_analysis('EUR', 'GBP', '2019-01-01', '2019-12-31')
#
#     # Valiutų poroje EUR-GBP, periode nuo 2019-01-01 iki 2019-12-31:
#     # Žemiausias kursas buvo 2019-12-09 - 0.84116
#     # Aukščiausias kursas buvo 2019-08-12 - 0.92203
#     =========================================================================
# -----------------------
# English description will be added.
# -----------------------------------------------

import requests
import json

currencies = ['AUD', 'BGN', 'BRL', 'CAD', 'CHF', 'CNY', 'CZK', 'DKK',
              'EUR', 'GBP', 'HKD', 'HRK', 'HUF', 'IDR', 'ILS', 'INR',
              'ISK', 'JPY', 'KRW', 'MXN', 'MYR', 'NOK', 'NZD', 'PHP',
              'PLN', 'RON', 'RUB', 'SEK', 'SGD', 'THB', 'TRY', 'USD',
              'ZAR']


def get_rate(currency1, currency2):
    if currency1 not in currencies or currency2 not in currencies:
        print("Error: Neteisingai suvestos valiutos. Galimų variantų sąrašas:")
        print(currencies)
        return

    url = 'https://api.frankfurter.app/latest?amount=1&from=' + currency1 + '&to=' + currency2
    response = requests.get(url)
    print(url)
    data = json.loads(response.text)
    print(f"{currency1}-{currency2}: {data['rates'][currency2]}")
    return data["rates"][currency2]


def currency_pair_analysis(currency1, currency2, start_date, end_date):
    # url = f'https://api.frankfurter.app/{start_date}..{end_date}?from={currency1}&to={currency2}'
    # response = requests.get(url)
    # data = json.loads(response.text)
    # print(data)

data = {'amount': 1.0, 'base': 'EUR', 'start_date': '2019-01-02', 'end_date': '2019-12-31',
            'rates': {'2019-01-02': {'GBP': 0.90165}, '2019-01-03': {'GBP': 0.90312}, '2019-01-04': {'GBP': 0.89988},
                      '2019-01-07': {'GBP': 0.8972}, '2019-01-08': {'GBP': 0.89743}, '2019-01-09': {'GBP': 0.89913},
                      '2019-01-10': {'GBP': 0.90423}, '2019-01-11': {'GBP': 0.90015}, '2019-01-14': {'GBP': 0.89263},
                      '2019-01-15': {'GBP': 0.89025}, '2019-01-16': {'GBP': 0.8859}, '2019-01-17': {'GBP': 0.8826},
                      '2019-01-18': {'GBP': 0.88125}, '2019-01-21': {'GBP': 0.88303}, '2019-01-22': {'GBP': 0.88},
                      '2019-01-23': {'GBP': 0.87213}, '2019-01-24': {'GBP': 0.87085}, '2019-01-25': {'GBP': 0.8658},
                      '2019-01-28': {'GBP': 0.86888}, '2019-01-29': {'GBP': 0.86735}, '2019-01-30': {'GBP': 0.87341},
                      '2019-01-31': {'GBP': 0.87578}, '2019-02-01': {'GBP': 0.87888}, '2019-02-04': {'GBP': 0.87678},
                      '2019-02-05': {'GBP': 0.87803}, '2019-02-06': {'GBP': 0.8787}, '2019-02-07': {'GBP': 0.8775},
                      '2019-02-08': {'GBP': 0.8749}, '2019-02-11': {'GBP': 0.87615}, '2019-02-12': {'GBP': 0.87705},
                      '2019-02-13': {'GBP': 0.87553}, '2019-02-14': {'GBP': 0.87945}, '2019-02-15': {'GBP': 0.87938},
                      '2019-02-18': {'GBP': 0.8762}, '2019-02-19': {'GBP': 0.87185}, '2019-02-20': {'GBP': 0.86945},
                      '2019-02-21': {'GBP': 0.86805}, '2019-02-22': {'GBP': 0.87263}, '2019-02-25': {'GBP': 0.86828},
                      '2019-02-26': {'GBP': 0.86055}, '2019-02-27': {'GBP': 0.85503}, '2019-02-28': {'GBP': 0.85835},
                      '2019-03-01': {'GBP': 0.85968}, '2019-03-04': {'GBP': 0.85775}, '2019-03-05': {'GBP': 0.86358},
                      '2019-03-06': {'GBP': 0.8597}, '2019-03-07': {'GBP': 0.8588}, '2019-03-08': {'GBP': 0.85905},
                      '2019-03-11': {'GBP': 0.8624}, '2019-03-12': {'GBP': 0.86145}, '2019-03-13': {'GBP': 0.8588},
                      '2019-03-14': {'GBP': 0.85228}, '2019-03-15': {'GBP': 0.85415}, '2019-03-18': {'GBP': 0.8566},
                      '2019-03-19': {'GBP': 0.85548}, '2019-03-20': {'GBP': 0.8628}, '2019-03-21': {'GBP': 0.8665},
                      '2019-03-22': {'GBP': 0.8589}, '2019-03-25': {'GBP': 0.85638}, '2019-03-26': {'GBP': 0.8533},
                      '2019-03-27': {'GBP': 0.85118}, '2019-03-28': {'GBP': 0.85555}, '2019-03-29': {'GBP': 0.8583},
                      '2019-04-01': {'GBP': 0.85658}, '2019-04-02': {'GBP': 0.86}, '2019-04-03': {'GBP': 0.8539},
                      '2019-04-04': {'GBP': 0.85418}, '2019-04-05': {'GBP': 0.85938}, '2019-04-08': {'GBP': 0.86183},
                      '2019-04-09': {'GBP': 0.86335}, '2019-04-10': {'GBP': 0.86083}, '2019-04-11': {'GBP': 0.86168},
                      '2019-04-12': {'GBP': 0.8629}, '2019-04-15': {'GBP': 0.86305}, '2019-04-16': {'GBP': 0.8639},
                      '2019-04-17': {'GBP': 0.86593}, '2019-04-18': {'GBP': 0.8647}, '2019-04-23': {'GBP': 0.8645},
                      '2019-04-24': {'GBP': 0.86545}, '2019-04-25': {'GBP': 0.86435}, '2019-04-26': {'GBP': 0.8634},
                      '2019-04-29': {'GBP': 0.8634}, '2019-04-30': {'GBP': 0.86248}, '2019-05-02': {'GBP': 0.8593},
                      '2019-05-03': {'GBP': 0.85785}, '2019-05-06': {'GBP': 0.8547}, '2019-05-07': {'GBP': 0.85645},
                      '2019-05-08': {'GBP': 0.86095}, '2019-05-09': {'GBP': 0.8612}, '2019-05-10': {'GBP': 0.8625},
                      '2019-05-13': {'GBP': 0.8635}, '2019-05-14': {'GBP': 0.86723}, '2019-05-15': {'GBP': 0.8682},
                      '2019-05-16': {'GBP': 0.87463}, '2019-05-17': {'GBP': 0.87595}, '2019-05-20': {'GBP': 0.8762},
                      '2019-05-21': {'GBP': 0.8761}, '2019-05-22': {'GBP': 0.8828}, '2019-05-23': {'GBP': 0.881},
                      '2019-05-24': {'GBP': 0.88318}, '2019-05-27': {'GBP': 0.88225}, '2019-05-28': {'GBP': 0.88373},
                      '2019-05-29': {'GBP': 0.88225}, '2019-05-30': {'GBP': 0.88178}, '2019-05-31': {'GBP': 0.88693},
                      '2019-06-03': {'GBP': 0.88618}, '2019-06-04': {'GBP': 0.88738}, '2019-06-05': {'GBP': 0.88631},
                      '2019-06-06': {'GBP': 0.88558}, '2019-06-07': {'GBP': 0.88675}, '2019-06-10': {'GBP': 0.89248},
                      '2019-06-11': {'GBP': 0.89085}, '2019-06-12': {'GBP': 0.88805}, '2019-06-13': {'GBP': 0.88948},
                      '2019-06-14': {'GBP': 0.89093}, '2019-06-17': {'GBP': 0.89208}, '2019-06-18': {'GBP': 0.89403},
                      '2019-06-19': {'GBP': 0.8902}, '2019-06-20': {'GBP': 0.89155}, '2019-06-21': {'GBP': 0.89425},
                      '2019-06-24': {'GBP': 0.89365}, '2019-06-25': {'GBP': 0.89485}, '2019-06-26': {'GBP': 0.89603},
                      '2019-06-27': {'GBP': 0.89428}, '2019-06-28': {'GBP': 0.89655}, '2019-07-01': {'GBP': 0.89718},
                      '2019-07-02': {'GBP': 0.89443}, '2019-07-03': {'GBP': 0.8975}, '2019-07-04': {'GBP': 0.8973},
                      '2019-07-05': {'GBP': 0.89703}, '2019-07-08': {'GBP': 0.89625}, '2019-07-09': {'GBP': 0.89975},
                      '2019-07-10': {'GBP': 0.89928}, '2019-07-11': {'GBP': 0.8979}, '2019-07-12': {'GBP': 0.89788},
                      '2019-07-15': {'GBP': 0.89873}, '2019-07-16': {'GBP': 0.9026}, '2019-07-17': {'GBP': 0.9034},
                      '2019-07-18': {'GBP': 0.89853}, '2019-07-19': {'GBP': 0.89635}, '2019-07-22': {'GBP': 0.89968},
                      '2019-07-23': {'GBP': 0.8983}, '2019-07-24': {'GBP': 0.89143}, '2019-07-25': {'GBP': 0.88963},
                      '2019-07-26': {'GBP': 0.89633}, '2019-07-29': {'GBP': 0.90443}, '2019-07-30': {'GBP': 0.91653},
                      '2019-07-31': {'GBP': 0.91623}, '2019-08-01': {'GBP': 0.9115}, '2019-08-02': {'GBP': 0.91505},
                      '2019-08-05': {'GBP': 0.9188}, '2019-08-06': {'GBP': 0.9183}, '2019-08-07': {'GBP': 0.92353},
                      '2019-08-08': {'GBP': 0.92115}, '2019-08-09': {'GBP': 0.9282}, '2019-08-12': {'GBP': 0.92615},
                      '2019-08-13': {'GBP': 0.9283}, '2019-08-14': {'GBP': 0.92673}, '2019-08-15': {'GBP': 0.91863},
                      '2019-08-16': {'GBP': 0.91033}, '2019-08-19': {'GBP': 0.91583}, '2019-08-20': {'GBP': 0.91623},
                      '2019-08-21': {'GBP': 0.91545}, '2019-08-22': {'GBP': 0.9115}, '2019-08-23': {'GBP': 0.90453},
                      '2019-08-26': {'GBP': 0.90808}, '2019-08-27': {'GBP': 0.90435}, '2019-08-28': {'GBP': 0.90823},
                      '2019-08-29': {'GBP': 0.90531}, '2019-08-30': {'GBP': 0.90565}, '2019-09-02': {'GBP': 0.9082},
                      '2019-09-03': {'GBP': 0.90885}, '2019-09-04': {'GBP': 0.90255}, '2019-09-05': {'GBP': 0.8958},
                      '2019-09-06': {'GBP': 0.89635}, '2019-09-09': {'GBP': 0.89275}, '2019-09-10': {'GBP': 0.893},
                      '2019-09-11': {'GBP': 0.89133}, '2019-09-12': {'GBP': 0.8892}, '2019-09-13': {'GBP': 0.89093},
                      '2019-09-16': {'GBP': 0.8851}, '2019-09-17': {'GBP': 0.88813}, '2019-09-18': {'GBP': 0.8872},
                      '2019-09-19': {'GBP': 0.88735}, '2019-09-20': {'GBP': 0.8823}, '2019-09-23': {'GBP': 0.88343},
                      '2019-09-24': {'GBP': 0.88153}, '2019-09-25': {'GBP': 0.88668}, '2019-09-26': {'GBP': 0.88505},
                      '2019-09-27': {'GBP': 0.88778}, '2019-09-30': {'GBP': 0.88573}, '2019-10-01': {'GBP': 0.88955},
                      '2019-10-02': {'GBP': 0.8897}, '2019-10-03': {'GBP': 0.8879}, '2019-10-04': {'GBP': 0.89045},
                      '2019-10-07': {'GBP': 0.89155}, '2019-10-08': {'GBP': 0.89795}, '2019-10-09': {'GBP': 0.8985},
                      '2019-10-10': {'GBP': 0.90155}, '2019-10-11': {'GBP': 0.87518}, '2019-10-14': {'GBP': 0.87983},
                      '2019-10-15': {'GBP': 0.87058}, '2019-10-16': {'GBP': 0.8656}, '2019-10-17': {'GBP': 0.8684},
                      '2019-10-18': {'GBP': 0.86435}, '2019-10-21': {'GBP': 0.8593}, '2019-10-22': {'GBP': 0.86065},
                      '2019-10-23': {'GBP': 0.86408}, '2019-10-24': {'GBP': 0.86288}, '2019-10-25': {'GBP': 0.86598},
                      '2019-10-28': {'GBP': 0.86328}, '2019-10-29': {'GBP': 0.86328}, '2019-10-30': {'GBP': 0.862},
                      '2019-10-31': {'GBP': 0.86133}, '2019-11-01': {'GBP': 0.86008}, '2019-11-04': {'GBP': 0.86368},
                      '2019-11-05': {'GBP': 0.86113}, '2019-11-06': {'GBP': 0.86033}, '2019-11-07': {'GBP': 0.86442},
                      '2019-11-08': {'GBP': 0.86158}, '2019-11-11': {'GBP': 0.85743}, '2019-11-12': {'GBP': 0.8582},
                      '2019-11-13': {'GBP': 0.8576}, '2019-11-14': {'GBP': 0.85643}, '2019-11-15': {'GBP': 0.8566},
                      '2019-11-18': {'GBP': 0.8533}, '2019-11-19': {'GBP': 0.85573}, '2019-11-20': {'GBP': 0.85715},
                      '2019-11-21': {'GBP': 0.85548}, '2019-11-22': {'GBP': 0.8598}, '2019-11-25': {'GBP': 0.85515},
                      '2019-11-26': {'GBP': 0.85715}, '2019-11-27': {'GBP': 0.8545}, '2019-11-28': {'GBP': 0.8518},
                      '2019-11-29': {'GBP': 0.85225}, '2019-12-02': {'GBP': 0.85218}, '2019-12-03': {'GBP': 0.852},
                      '2019-12-04': {'GBP': 0.8461}, '2019-12-05': {'GBP': 0.8447}, '2019-12-06': {'GBP': 0.84453},
                      '2019-12-09': {'GBP': 0.84195}, '2019-12-10': {'GBP': 0.84073}, '2019-12-11': {'GBP': 0.84245},
                      '2019-12-12': {'GBP': 0.8456}, '2019-12-13': {'GBP': 0.83508}, '2019-12-16': {'GBP': 0.83415},
                      '2019-12-17': {'GBP': 0.84748}, '2019-12-18': {'GBP': 0.85055}, '2019-12-19': {'GBP': 0.85073},
                      '2019-12-20': {'GBP': 0.85133}, '2019-12-23': {'GBP': 0.85708}, '2019-12-24': {'GBP': 0.85533},
                      '2019-12-27': {'GBP': 0.8513}, '2019-12-30': {'GBP': 0.85208}, '2019-12-31': {'GBP': 0.8508}}}


def get_key(val, dct):
    """Little key by value extractor."""
    for key, value in dct.items():
        if val == value:
            return key


new_dict = {}
for key, value in data['rates'].items():
    new_dict[key] = value[target]

    # rates = data['rates']
    # max_rate = max(rates.values())
    # min_rate = min(rates.values())
    #
    # max_date = max(rates, key=lambda x: rates[x])
    # min_date = min(rates, key=lambda x: rates[x])
    #
    # print(f"Valiutų poroje {currency1}-{currency2}, periode nuo {start_date} iki {end_date}:")
    # print(f"Žemiausias kursas buvo {min_date} - {min_rate}")
    # print(f"Aukščiausias kursas buvo {max_date} - {max_rate}")


currency_pair_analysis('EUR', 'GBP', '2019-01-01', '2019-12-31')

